{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getServerData } from '../helper/helper';\nimport * as Action from '../redux/question_reducer';\nexport const useFetchQuestion = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [getData, setGetData] = useState({\n    isLoding: false,\n    apiData: [],\n    serverError: null\n  });\n  useEffect(() => {\n    setGetData(prev => ({\n      ...prev,\n      isLoading: true\n    }));\n    (async () => {\n      try {\n        const [{\n          questions,\n          answers\n        }] = await getServerData(`${process.env.REACT_APP_SERVER_HOSTNAME}/api/questions`, data => data);\n        if (questions.length > 0) {\n          setGetData(prev => ({\n            ...prev,\n            isLoading: false\n          }));\n          setGetData(prev => ({\n            ...prev,\n            apiData: questions\n          }));\n          dispatch(Action.startExamAction({\n            question: questions,\n            answers\n          }));\n        } else {\n          throw new Error('No Question Available.');\n        }\n      } catch (error) {\n        setGetData(prev => ({\n          ...prev,\n          isLoading: false\n        }));\n        setGetData(prev => ({\n          ...prev,\n          serverError: error\n        }));\n      }\n    })();\n  }, [dispatch]);\n  return [getData, setGetData];\n};\n_s(useFetchQuestion, \"Ysl8Fz9kJUeyMeObDHCcrX+Vfyk=\", false, function () {\n  return [useDispatch];\n});\nexport const MoveNextQuestion = () => async dispatch => {\n  try {\n    dispatch(Action.moveNextAction());\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const MovePrevQuestion = () => async dispatch => {\n  try {\n    dispatch(Action.movePrevAction());\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["useEffect","useState","useDispatch","getServerData","Action","useFetchQuestion","dispatch","getData","setGetData","isLoding","apiData","serverError","prev","isLoading","questions","answers","process","env","REACT_APP_SERVER_HOSTNAME","data","length","startExamAction","question","Error","error","MoveNextQuestion","moveNextAction","console","log","MovePrevQuestion","movePrevAction"],"sources":["C:/Users/Administrator/Desktop/Quiz app/client/src/hooks/FetchQuestion.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { getServerData } from '../helper/helper'\r\n\r\nimport * as Action from '../redux/question_reducer';\r\n\r\nexport const useFetchQuestion = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [getData, setGetData] = useState({\r\n    isLoding: false,\r\n    apiData: [],\r\n    serverError: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setGetData((prev) => ({ ...prev, isLoading: true }));\r\n\r\n    (async () => {\r\n      try {\r\n         const [{questions, answers}]= await getServerData(`${process.env.REACT_APP_SERVER_HOSTNAME}/api/questions`,data => data);\r\n        if (questions.length > 0) {\r\n          setGetData((prev) => ({ ...prev, isLoading: false }));\r\n          setGetData((prev) => ({ ...prev, apiData: questions }));\r\n\r\n          dispatch(Action.startExamAction({ question: questions, answers }));\r\n        } else {\r\n          throw new Error('No Question Available.');\r\n        }\r\n      } catch (error) {\r\n        setGetData((prev) => ({ ...prev, isLoading: false }));\r\n        setGetData((prev) => ({ ...prev, serverError: error }));\r\n      }\r\n    })();\r\n  }, [dispatch]);\r\n\r\n  return [getData, setGetData];\r\n};\r\n\r\nexport const MoveNextQuestion = () => async (dispatch) => {\r\n  try {\r\n    dispatch(Action.moveNextAction());\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const MovePrevQuestion = () => async (dispatch) => {\r\n  try {\r\n    dispatch(Action.movePrevAction());\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,aAAa,QAAQ,kBAAkB;AAEhD,OAAO,KAAKC,MAAM,MAAM,2BAA2B;AAEnD,OAAO,MAAMC,gBAAgB,GAAG,MAAM;EAAA;EACpC,MAAMC,QAAQ,GAAGJ,WAAW,EAAE;EAE9B,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC;IACrCQ,QAAQ,EAAE,KAAK;IACfC,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE;EACf,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IACdQ,UAAU,CAAEI,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC,CAAC;IAEpD,CAAC,YAAY;MACX,IAAI;QACD,MAAM,CAAC;UAACC,SAAS;UAAEC;QAAO,CAAC,CAAC,GAAE,MAAMZ,aAAa,CAAE,GAAEa,OAAO,CAACC,GAAG,CAACC,yBAA0B,gBAAe,EAACC,IAAI,IAAIA,IAAI,CAAC;QACzH,IAAIL,SAAS,CAACM,MAAM,GAAG,CAAC,EAAE;UACxBZ,UAAU,CAAEI,IAAI,KAAM;YAAE,GAAGA,IAAI;YAAEC,SAAS,EAAE;UAAM,CAAC,CAAC,CAAC;UACrDL,UAAU,CAAEI,IAAI,KAAM;YAAE,GAAGA,IAAI;YAAEF,OAAO,EAAEI;UAAU,CAAC,CAAC,CAAC;UAEvDR,QAAQ,CAACF,MAAM,CAACiB,eAAe,CAAC;YAAEC,QAAQ,EAAER,SAAS;YAAEC;UAAQ,CAAC,CAAC,CAAC;QACpE,CAAC,MAAM;UACL,MAAM,IAAIQ,KAAK,CAAC,wBAAwB,CAAC;QAC3C;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdhB,UAAU,CAAEI,IAAI,KAAM;UAAE,GAAGA,IAAI;UAAEC,SAAS,EAAE;QAAM,CAAC,CAAC,CAAC;QACrDL,UAAU,CAAEI,IAAI,KAAM;UAAE,GAAGA,IAAI;UAAED,WAAW,EAAEa;QAAM,CAAC,CAAC,CAAC;MACzD;IACF,CAAC,GAAG;EACN,CAAC,EAAE,CAAClB,QAAQ,CAAC,CAAC;EAEd,OAAO,CAACC,OAAO,EAAEC,UAAU,CAAC;AAC9B,CAAC;AAAC,GA/BWH,gBAAgB;EAAA,QACVH,WAAW;AAAA;AAgC9B,OAAO,MAAMuB,gBAAgB,GAAG,MAAM,MAAOnB,QAAQ,IAAK;EACxD,IAAI;IACFA,QAAQ,CAACF,MAAM,CAACsB,cAAc,EAAE,CAAC;EACnC,CAAC,CAAC,OAAOF,KAAK,EAAE;IACdG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EACpB;AACF,CAAC;AAED,OAAO,MAAMK,gBAAgB,GAAG,MAAM,MAAOvB,QAAQ,IAAK;EACxD,IAAI;IACFA,QAAQ,CAACF,MAAM,CAAC0B,cAAc,EAAE,CAAC;EACnC,CAAC,CAAC,OAAON,KAAK,EAAE;IACdG,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EACpB;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}