{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Quiz app\\\\client\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Questions from './Questions';\nimport { MoveNextQuestion, MovePrevQuestion } from '../hooks/FetchQuestion';\nimport { PushAnswer } from '../hooks/setResult';\n\n/** redux store import */\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Quiz() {\n  _s();\n  const [check, setChecked] = useState(undefined);\n  const result = useSelector(state => state.result.result);\n  const {\n    queue,\n    trace\n  } = useSelector(state => state.questions);\n  const dispatch = useDispatch();\n\n  /** next button event handler */\n  function onNext() {\n    /** update the trace value by one using MoveNextAction */\n    if (trace < queue.length) {\n      dispatch(MoveNextQuestion());\n\n      /** inser a new reesult in the array*/\n      if (result.length <= trace) {\n        dispatch(PushAnswer(check));\n      }\n    }\n\n    /** insert the value of the checked variable */\n    setChecked(undefined);\n  }\n\n  /** prev button event handler */\n  function onPrev() {\n    if (trace > 0) {\n      /** increase the trace value by one using MoveNextAction */\n      dispatch(MovePrevQuestion());\n    }\n  }\n  function onChecked(check) {\n    setChecked(check);\n  }\n  {\n    /** finish exams after the last question*/\n  }\n  if (result.length && result.length >= queue.length) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: '/result',\n      replace: \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title text-light\",\n      children: \"Quiz Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Questions, {\n      onChecked: onChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: [trace > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn prev\",\n        onClick: onPrev,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn next\",\n        onClick: onNext,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Quiz, \"YBm9kR+hLN00fICnSZPX305t2UY=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useEffect","useState","Questions","MoveNextQuestion","MovePrevQuestion","PushAnswer","useSelector","useDispatch","Navigate","Quiz","check","setChecked","undefined","result","state","queue","trace","questions","dispatch","onNext","length","onPrev","onChecked"],"sources":["C:/Users/Administrator/Desktop/Quiz app/client/src/components/Quiz.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Questions from './Questions';\r\nimport { MoveNextQuestion, MovePrevQuestion } from '../hooks/FetchQuestion';\r\nimport { PushAnswer } from '../hooks/setResult';\r\n\r\n/** redux store import */\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nexport default function Quiz() {\r\n  const [check, setChecked] = useState(undefined);\r\n\r\n  const result = useSelector((state) => state.result.result);\r\n  const { queue, trace } = useSelector((state) => state.questions);\r\n  const dispatch = useDispatch();\r\n\r\n  /** next button event handler */\r\n  function onNext() {\r\n    /** update the trace value by one using MoveNextAction */\r\n    if (trace < queue.length) {\r\n      dispatch(MoveNextQuestion());\r\n\r\n      /** inser a new reesult in the array*/\r\n      if (result.length <= trace) {\r\n        dispatch(PushAnswer(check));\r\n      }\r\n    }\r\n\r\n    /** insert the value of the checked variable */\r\n    setChecked(undefined);\r\n  }\r\n\r\n  /** prev button event handler */\r\n  function onPrev() {\r\n    if (trace > 0) {\r\n      /** increase the trace value by one using MoveNextAction */\r\n      dispatch(MovePrevQuestion());\r\n    }\r\n  }\r\n\r\n  function onChecked(check) {\r\n    setChecked(check);\r\n  }\r\n\r\n  {\r\n    /** finish exams after the last question*/\r\n  }\r\n  if (result.length && result.length >= queue.length) {\r\n    return <Navigate to={'/result'} replace=\"true\"></Navigate>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title text-light\">Quiz Application</h1>\r\n\r\n      {/* display question*/}\r\n      <Questions onChecked={onChecked} />\r\n\r\n      <div className=\"grid\">\r\n        {trace > 0 && (\r\n          <button className=\"btn prev\" onClick={onPrev}>\r\n            Prev\r\n          </button>\r\n        )}\r\n        <button className=\"btn next\" onClick={onNext}>\r\n          Next\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,gBAAgB,EAAEC,gBAAgB,QAAQ,wBAAwB;AAC3E,SAASC,UAAU,QAAQ,oBAAoB;;AAE/C;AACA,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,kBAAkB;AAAC;AAE5C,eAAe,SAASC,IAAI,GAAG;EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAACW,SAAS,CAAC;EAE/C,MAAMC,MAAM,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACD,MAAM,CAACA,MAAM,CAAC;EAC1D,MAAM;IAAEE,KAAK;IAAEC;EAAM,CAAC,GAAGV,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACG,SAAS,CAAC;EAChE,MAAMC,QAAQ,GAAGX,WAAW,EAAE;;EAE9B;EACA,SAASY,MAAM,GAAG;IAChB;IACA,IAAIH,KAAK,GAAGD,KAAK,CAACK,MAAM,EAAE;MACxBF,QAAQ,CAACf,gBAAgB,EAAE,CAAC;;MAE5B;MACA,IAAIU,MAAM,CAACO,MAAM,IAAIJ,KAAK,EAAE;QAC1BE,QAAQ,CAACb,UAAU,CAACK,KAAK,CAAC,CAAC;MAC7B;IACF;;IAEA;IACAC,UAAU,CAACC,SAAS,CAAC;EACvB;;EAEA;EACA,SAASS,MAAM,GAAG;IAChB,IAAIL,KAAK,GAAG,CAAC,EAAE;MACb;MACAE,QAAQ,CAACd,gBAAgB,EAAE,CAAC;IAC9B;EACF;EAEA,SAASkB,SAAS,CAACZ,KAAK,EAAE;IACxBC,UAAU,CAACD,KAAK,CAAC;EACnB;EAEA;IACE;EAAA;EAEF,IAAIG,MAAM,CAACO,MAAM,IAAIP,MAAM,CAACO,MAAM,IAAIL,KAAK,CAACK,MAAM,EAAE;IAClD,oBAAO,QAAC,QAAQ;MAAC,EAAE,EAAE,SAAU;MAAC,OAAO,EAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAY;EAC5D;EAEA,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAI,SAAS,EAAC,kBAAkB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAsB,eAGtD,QAAC,SAAS;MAAC,SAAS,EAAEE;IAAU;MAAA;MAAA;MAAA;IAAA,QAAG,eAEnC;MAAK,SAAS,EAAC,MAAM;MAAA,WAClBN,KAAK,GAAG,CAAC,iBACR;QAAQ,SAAS,EAAC,UAAU;QAAC,OAAO,EAAEK,MAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAG9C,eACD;QAAQ,SAAS,EAAC,UAAU;QAAC,OAAO,EAAEF,MAAO;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEpC;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GA7DuBV,IAAI;EAAA,QAGXH,WAAW,EACDA,WAAW,EACnBC,WAAW;AAAA;AAAA,KALNE,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}