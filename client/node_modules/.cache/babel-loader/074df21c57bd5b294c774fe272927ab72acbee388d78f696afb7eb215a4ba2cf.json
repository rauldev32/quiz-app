{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Administrator\\\\Desktop\\\\Quiz app\\\\client\\\\src\\\\components\\\\Questions.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useFetchQuestion } from '../hooks/FetchQuestion';\nimport { updateResult } from '../hooks/setResult';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Questions(_ref) {\n  _s();\n  let {\n    onChecked\n  } = _ref;\n  const [checked, setChecked] = useState(undefined);\n  const {\n    trace\n  } = useSelector(state => state.questions);\n  const result = useSelector(state => state.result.result);\n  const [{\n    isLoding,\n    apiData,\n    serverError\n  }] = useFetchQuestion();\n  const questions = useSelector(state => state.questions.queue[state.questions.trace]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(updateResult({\n      trace,\n      checked\n    }));\n  }, [checked]);\n  function onSelect(i) {\n    onChecked(i);\n    setChecked(i);\n    dispatch(updateResult({\n      trace,\n      checked\n    }));\n  }\n  if (isLoding) return /*#__PURE__*/_jsxDEV(\"h4\", {\n    className: \"text-light\",\n    children: \"isLoading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 24\n  }, this);\n  if (serverError) return /*#__PURE__*/_jsxDEV(\"h4\", {\n    className: \"text-light\",\n    children: serverError || 'Unknown Error'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-light\",\n      children: questions === null || questions === void 0 ? void 0 : questions.question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: questions === null || questions === void 0 ? void 0 : questions.options.map((q, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          value: true,\n          name: \"options\",\n          id: `q${i}-option`,\n          onChange: () => onSelect(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"text-primary\",\n          htmlFor: `q${i}-option`,\n          children: q\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `check ${result[trace] == i && `checked`} `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, questions === null || questions === void 0 ? void 0 : questions.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Questions, \"nERajLTgmMTX/IO1R7PtcDyoaIc=\", false, function () {\n  return [useSelector, useSelector, useFetchQuestion, useSelector, useDispatch];\n});\n_c = Questions;\nvar _c;\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useEffect","useState","useSelector","useDispatch","useFetchQuestion","updateResult","Questions","onChecked","checked","setChecked","undefined","trace","state","questions","result","isLoding","apiData","serverError","queue","dispatch","onSelect","i","question","options","map","q","id"],"sources":["C:/Users/Administrator/Desktop/Quiz app/client/src/components/Questions.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { useFetchQuestion } from '../hooks/FetchQuestion';\r\nimport { updateResult } from '../hooks/setResult';\r\n\r\nexport default function Questions({ onChecked }) {\r\n  const [checked, setChecked] = useState(undefined);\r\n  const { trace } = useSelector((state) => state.questions);\r\n  const result = useSelector((state) => state.result.result);\r\n  const [{ isLoding, apiData, serverError }] = useFetchQuestion();\r\n\r\n  const questions = useSelector(\r\n    (state) => state.questions.queue[state.questions.trace]\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(updateResult({ trace, checked }));\r\n  }, [checked]);\r\n\r\n  function onSelect(i) {\r\n    onChecked(i);\r\n    setChecked(i);\r\n    dispatch(updateResult({ trace, checked }));\r\n\r\n  }\r\n\r\n  if (isLoding) return <h4 className=\"text-light\">isLoading</h4>;\r\n  if (serverError)\r\n    return <h4 className=\"text-light\">{serverError || 'Unknown Error'}</h4>;\r\n\r\n  return (\r\n    <div className=\"questions\">\r\n      <h2 className=\"text-light\">{questions?.question}</h2>\r\n\r\n      <ul key={questions?.id}>\r\n        {questions?.options.map((q, i) => (\r\n          <li key={i}>\r\n            <input\r\n              type=\"radio\"\r\n              value={true}\r\n              name=\"options\"\r\n              id={`q${i}-option`}\r\n              onChange={() => onSelect(i)}\r\n            />\r\n\r\n            <label className=\"text-primary\" htmlFor={`q${i}-option`}>\r\n              {q}\r\n            </label>\r\n            <div className={`check ${result[trace] == i && `checked` } `}></div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,gBAAgB,QAAQ,wBAAwB;AACzD,SAASC,YAAY,QAAQ,oBAAoB;AAAC;AAElD,eAAe,SAASC,SAAS,OAAgB;EAAA;EAAA,IAAf;IAAEC;EAAU,CAAC;EAC7C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAACS,SAAS,CAAC;EACjD,MAAM;IAAEC;EAAM,CAAC,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,SAAS,CAAC;EACzD,MAAMC,MAAM,GAAGZ,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACE,MAAM,CAACA,MAAM,CAAC;EAC1D,MAAM,CAAC;IAAEC,QAAQ;IAAEC,OAAO;IAAEC;EAAY,CAAC,CAAC,GAAGb,gBAAgB,EAAE;EAE/D,MAAMS,SAAS,GAAGX,WAAW,CAC1BU,KAAK,IAAKA,KAAK,CAACC,SAAS,CAACK,KAAK,CAACN,KAAK,CAACC,SAAS,CAACF,KAAK,CAAC,CACxD;EACD,MAAMQ,QAAQ,GAAGhB,WAAW,EAAE;EAE9BH,SAAS,CAAC,MAAM;IACdmB,QAAQ,CAACd,YAAY,CAAC;MAAEM,KAAK;MAAEH;IAAQ,CAAC,CAAC,CAAC;EAC5C,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEb,SAASY,QAAQ,CAACC,CAAC,EAAE;IACnBd,SAAS,CAACc,CAAC,CAAC;IACZZ,UAAU,CAACY,CAAC,CAAC;IACbF,QAAQ,CAACd,YAAY,CAAC;MAAEM,KAAK;MAAEH;IAAQ,CAAC,CAAC,CAAC;EAE5C;EAEA,IAAIO,QAAQ,EAAE,oBAAO;IAAI,SAAS,EAAC,YAAY;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAe;EAC9D,IAAIE,WAAW,EACb,oBAAO;IAAI,SAAS,EAAC,YAAY;IAAA,UAAEA,WAAW,IAAI;EAAe;IAAA;IAAA;IAAA;EAAA,QAAM;EAEzE,oBACE;IAAK,SAAS,EAAC,WAAW;IAAA,wBACxB;MAAI,SAAS,EAAC,YAAY;MAAA,UAAEJ,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAES;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAM,eAErD;MAAA,UACGT,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEU,OAAO,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEJ,CAAC,kBAC3B;QAAA,wBACE;UACE,IAAI,EAAC,OAAO;UACZ,KAAK,EAAE,IAAK;UACZ,IAAI,EAAC,SAAS;UACd,EAAE,EAAG,IAAGA,CAAE,SAAS;UACnB,QAAQ,EAAE,MAAMD,QAAQ,CAACC,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAC5B,eAEF;UAAO,SAAS,EAAC,cAAc;UAAC,OAAO,EAAG,IAAGA,CAAE,SAAS;UAAA,UACrDI;QAAC;UAAA;UAAA;UAAA;QAAA,QACI,eACR;UAAK,SAAS,EAAG,SAAQX,MAAM,CAACH,KAAK,CAAC,IAAIU,CAAC,IAAK,SAAU;QAAG;UAAA;UAAA;UAAA;QAAA,QAAO;MAAA,GAZ7DA,CAAC;QAAA;QAAA;QAAA;MAAA,QAcX;IAAC,GAhBKR,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEa,EAAE;MAAA;MAAA;MAAA;IAAA,QAiBjB;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAEV;AAAC,GAlDuBpB,SAAS;EAAA,QAEbJ,WAAW,EACdA,WAAW,EACmBE,gBAAgB,EAE3CF,WAAW,EAGZC,WAAW;AAAA;AAAA,KATNG,SAAS;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}